{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n   public ListNode mergeKLists(ListNode[] lists) {\n        if (lists == null) {\n            return null;\n        }\n        ListNode head = null;\n        for (int i = 0; i < lists.length; i++) {\n            head = mergeTwoLists(head, lists[i]);\n        }\n        return head;\n    }\n\n    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n        ListNode head = new ListNode(-1);\n        ListNode current = head;\n        while (l1 != null && l2 != null) {\n            if (l1.val < l2.val) {\n                current.next = l1;\n                l1 = l1.next;\n            } else {\n                current.next = l2;\n                l2 = l2.next;\n            }\n            current = current.next;\n        }\n\n\n        if (l1 != null) {\n            current.next = l1;\n        }\n        if (l2 != null) {\n            current.next = l2;\n        }\n\n\n        return head.next;\n    }\n}"}