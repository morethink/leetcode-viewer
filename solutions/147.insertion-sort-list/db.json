{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n /**\n     * 新建一个链表，然后遍历原链表按序插入新链表\n     *\n     * @param head\n     * @return\n     */\n    public ListNode insertionSortList(ListNode head) {\n        if (head == null || head.next == null) {\n            return head;\n        }\n\n        ListNode headNext = head.next;\n        head.next = null;\n        //遍历原链表\n        for (ListNode node = headNext, nodeNext = node.next; node != null; node = nodeNext, nodeNext = nodeNext == null ? null : nodeNext.next) {\n            ListNode p1 = head, p2 = null;\n            //插入新链表\n            for (; p1 != null; p2 = p1, p1 = p1.next) {\n                if (p1.val > node.val) {\n                    //小于头节点\n                    if (p1 == head) {\n                        head = node;\n                        head.next = p1;\n\n                    } else {\n                    //在中间\n                        p2.next = node;\n                        node.next = p1;\n                    }\n                    break;\n                }\n            }\n            //大于尾节点\n            if (p1 == null) {\n                p2.next = node;\n                node.next = null;\n            }\n        }\n\n\n        return head;\n    }\n}"}