{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\npublic ListNode sortList(ListNode head) {\n        quickSort(head, null);\n        return head;\n    }\n\n    public static void quickSort(ListNode head, ListNode end) {\n        if (head != end) {\n            ListNode node = partion(head, end);\n            quickSort(head, node);\n            quickSort(node.next, end);\n        }\n    }\n\n    public static ListNode partion(ListNode head, ListNode end) {\n        ListNode p1 = head, p2 = head.next;\n        while (p2 != end) {\n\n            if (p2.val < head.val) {\n                p1 = p1.next;\n\n                int temp = p1.val;\n                p1.val = p2.val;\n                p2.val = temp;\n            }\n            p2 = p2.next;\n        }\n\n        if (p1 != head) {\n            int temp = p1.val;\n            p1.val = head.val;\n            head.val = temp;\n        }\n        return p1;\n    }\n}"}