{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\npublic List<Integer> rightSideView(TreeNode root) {\n        List<Integer> list = new ArrayList<>();\n        if (root == null) {\n            return list;\n        }\n        Queue<TreeNode> queue = new LinkedList<>();\n        queue.offer(root);\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            for (int i = 0; i < size; i++) {\n                TreeNode treeNode = queue.poll();\n                if (i == 0) {\n                    list.add(treeNode.val);\n                }\n                if (treeNode.right != null) {\n                    queue.offer(treeNode.right);\n                }\n                if (treeNode.left != null) {\n                    queue.offer(treeNode.left);\n                }\n            }\n        }\n        return list;\n    }\n}"}